{"version":3,"sources":["Modal/Modal.tsx","Rates/Rates.tsx","App.tsx","index.tsx"],"names":["Modal","label","type","isClosable","React","useState","show","setShow","className","join","style","undefined","display","onClick","Rates","data","getRatesFromUrl","value","date","onChange","e","params","target","base","Object","entries","rates","filter","map","key","App","ratesData","setRatesData","loading","setLoading","hasError","setHasError","url","URL","search","URLSearchParams","toString","fetch","then","response","ok","json","Error","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAIaA,EAIR,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAAiB,EACVC,IAAMC,UAAS,GADL,mBAC3BC,EAD2B,KACrBC,EADqB,KAKlC,OAAQ,qBACJC,UAAW,CAAC,QAASN,EAAMC,GAAc,YAAYM,KAAK,KAC1DC,MAAQJ,OAA6BK,EAAtB,CAAEC,QAAS,QAC1BC,QAASV,EALO,kBAAMI,GAAQ,SAKMI,EAHhC,SAKHV,KCRIa,G,MAA6D,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBASjF,OAAQ,qCACN,uBAAOR,UAAW,OAAQN,KAAK,OAAOe,MAAOF,EAAKG,KAAMC,SATrC,SAACC,GACpB,IAAMC,EAAS,CACbH,KAAME,EAAEE,OAAOL,MACfM,KAAMR,EAAKQ,MAEbP,EAAgBK,MAKhB,qBAAKb,UAAW,aAAc,cAAa,QAA3C,SAEIgB,OAAOC,QAAQV,EAAKW,OACjBC,QAAO,yCAAmBZ,EAAKQ,QAC/BK,KAAI,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXZ,EAAW,KAUrB,OACE,sBAAKT,UAAW,OAAkBK,QAThB,WAClB,IAAMQ,EAAS,CACbH,KAAMH,EAAKG,KACXK,KAAMM,GAERb,EAAgBK,IAIhB,UACE,sBAAKb,UAAW,UAAhB,UAA4BO,EAAKQ,KAAjC,IAAwCM,KACxC,qBAAKrB,UAAW,YAAhB,SAA8BS,MAFHY,aC7B9BC,EAAgB,WAAO,IAAD,EACC1B,IAAMC,SAA2B,MADlC,mBAC1B0B,EAD0B,KACfC,EADe,OAEH5B,IAAMC,UAAS,GAFZ,mBAE1B4B,EAF0B,KAEjBC,EAFiB,OAGD9B,IAAMC,UAAS,GAHd,mBAG1B8B,EAH0B,KAGhBC,EAHgB,KAK3BpB,EAAkB,SAACK,GACvBa,GAAW,GAEX,IAAMG,EAAM,IAAIC,IAVG,mCAWnBD,EAAIE,OAAS,IAAIC,gBAAgBnB,GAAQoB,WAEzCC,MAAML,EAAII,YACPE,MAAK,SAACC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,SAGbJ,MAAK,SAAC5B,GACLqB,GAAY,GACZJ,EAAajB,GACbmB,GAAW,MAEZc,OAAM,WACLZ,GAAY,GACZJ,EAAa,MACbE,GAAW,OAIjB,OACE,sBAAK1B,UAAU,MAAf,UAEIyB,GAAW,cAAC,EAAD,CAAOhC,MAAO,aAAcC,KAAM,iBAG7CiC,GAAY,cAAC,EAAD,CAAOlC,MAAO,QAASC,KAAM,QAASC,YAAY,IAG9D4B,EACI,cAAC,EAAD,CAAOhB,KAAMgB,EAAWf,gBAAiBA,IACzC,wBAAQH,QAAS,kBAAMG,KAAvB,2BC5CZiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.853ccf7d.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Modal.css\";\n\nexport const Modal: React.FC<{\n    label: string,\n    type: \"notification\" | \"error\",\n    isClosable?: boolean\n}> = ({ label, type, isClosable }) => {\n    const [show, setShow] = React.useState(true);\n\n    const handleClose = () => setShow(false);\n\n    return (<div\n        className={[\"modal\", type, isClosable && \"closable\"].join(\" \")}\n        style={!show ? { display: \"none\" } : undefined}\n        onClick={isClosable ? handleClose : undefined}\n    >\n        {label}\n    </div>);\n}\n","import React from \"react\";\n\nimport \"./Rates.css\";\n\nexport type RatesData = {\n  date: string;\n  base: string;\n  rates: { [key: string]: number; }\n};\n\nexport const Rates: React.FC<{ data: RatesData, getRatesFromUrl: any }> = ({ data, getRatesFromUrl }) => {\n  const onChangeDate = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const params = {\n      date: e.target.value,\n      base: data.base,\n    };\n    getRatesFromUrl(params)\n  }\n\n  return (<>\n    <input className={\"date\"} type=\"date\" value={data.date} onChange={onChangeDate} />\n    <div className={\"ratesTable\"} data-testid={\"rates\"}>\n      {\n        Object.entries(data.rates)\n          .filter(([key]) => key !== data.base)\n          .map(([key, value]) => {\n\n            const onRateClick = () => {\n              const params = {\n                date: data.date,\n                base: key,\n              };\n              getRatesFromUrl(params)\n            }\n\n            return (\n              <div className={\"rate\"} key={key} onClick={onRateClick}>\n                <div className={\"rateKey\"}>{data.base}-{key}</div>\n                <div className={\"rateValue\"}>{value}</div>\n              </div>\n            )\n          })\n      }\n    </div>\n  </>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Modal } from \"./Modal/Modal\";\nimport { Rates, RatesData } from \"./Rates/Rates\";\n\nexport const API_URL = \"https://api.vatcomply.com/rates\";\n\nexport const App: React.FC = () => {\n  const [ratesData, setRatesData] = React.useState<RatesData | null>(null);\n  const [loading, setLoading] = React.useState(false);\n  const [hasError, setHasError] = React.useState(false);\n\n  const getRatesFromUrl = (params?: { [key: string]: string; }) => {\n    setLoading(true);\n\n    const url = new URL(API_URL);\n    url.search = new URLSearchParams(params).toString();\n\n    fetch(url.toString())\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error();\n        }\n      })\n      .then((data: RatesData) => {\n        setHasError(false)\n        setRatesData(data);\n        setLoading(false);\n      })\n      .catch(() => {\n        setHasError(true)\n        setRatesData(null);\n        setLoading(false)\n      })\n  }\n\n  return (\n    <div className=\"App\">\n      {\n        loading && <Modal label={\"Loading...\"} type={\"notification\"} />\n      }\n      {\n        hasError && <Modal label={\"Error\"} type={\"error\"} isClosable={true} />\n      }\n      {\n        ratesData\n          ? <Rates data={ratesData} getRatesFromUrl={getRatesFromUrl} />\n          : <button onClick={() => getRatesFromUrl()}>Get rates</button>\n      }\n    </div>\n  )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}